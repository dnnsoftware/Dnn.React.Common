// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dnn Dropdown component Displays a dropdown list onClick 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    autoHide={false}
    className=""
    closeOnClick={true}
    enabled={true}
    isDropDownOpen={false}
    label="My new label"
    onSelect={[Function]}
    options={
      Array [
        Object {
          "label": "First Label",
          "searchableValue": "first",
          "value": "first",
        },
        Object {
          "label": "Second Label",
          "searchableValue": "second",
          "value": "second",
        },
        Object {
          "label": "Third Label",
          "searchableValue": "third",
          "value": "third",
        },
      ]
    }
    prependWith="Prepend text:"
    size="small"
    value="second"
    withBorder={true}
    withIcon={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="collapsible-label no-wrap"
          onClick={[Function]}
          title={undefined}
        >
          <span
            className="dropdown-prepend"
          >
            <strong>
              Prepend text:
            </strong>
             
            Second Label
          </span>
        </div>,
        <input
          aria-label="Search"
          onChange={[Function]}
          onKeyDown={[Function]}
          style={
            Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            }
          }
          type="text"
          value=""
        />,
        <div
          className="dropdown-icon"
          dangerouslySetInnerHTML={
            Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            }
          }
          onClick={[Function]}
        />,
        <div
          className="collapsible-content"
        >
          <UnmountClosed
            fixedHeight={104}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>
          </UnmountClosed>
        </div>,
      ],
      "className": "dnn-dropdown with-border small ",
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="dropdown-prepend"
          >
            <strong>
              Prepend text:
            </strong>
             
            Second Label
          </span>,
          "className": "collapsible-label no-wrap",
          "onClick": [Function],
          "title": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <strong>
                Prepend text:
              </strong>,
              " ",
              "Second Label",
            ],
            "className": "dropdown-prepend",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Prepend text:",
              },
              "ref": null,
              "rendered": "Prepend text:",
              "type": "strong",
            },
            " ",
            "Second Label",
          ],
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "aria-label": "Search",
          "onChange": [Function],
          "onKeyDown": [Function],
          "style": Object {
            "height": 0,
            "margin": 0,
            "opacity": 0,
            "padding": 0,
            "pointerEvents": "none",
            "position": "absolute",
            "width": 0,
          },
          "type": "text",
          "value": "",
        },
        "ref": "dropdownSearch",
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "className": "dropdown-icon",
          "dangerouslySetInnerHTML": Object {
            "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
          },
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <UnmountClosed
            fixedHeight={104}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>
          </UnmountClosed>,
          "className": "collapsible-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>,
            "fixedHeight": 104,
            "isOpened": false,
            "keepCollapsedContent": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "autoHeight": false,
              "autoHeightMax": 200,
              "autoHeightMin": 0,
              "autoHide": false,
              "autoHideDuration": 200,
              "autoHideTimeout": 1000,
              "children": <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>,
              "hideTracksWhenNotNeeded": false,
              "onUpdate": undefined,
              "renderThumbHorizontal": [Function],
              "renderThumbVertical": [Function],
              "renderTrackHorizontal": [Function],
              "renderTrackVertical": [Function],
              "renderView": [Function],
              "style": undefined,
              "tagName": "div",
              "thumbMinSize": 30,
              "universal": false,
            },
            "ref": "dropdownScrollContainer",
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>,
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>,
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "1045846838839.7866option-0",
                    "nodeType": "host",
                    "props": Object {
                      "children": "First Label",
                      "className": "",
                      "onClick": [Function],
                    },
                    "ref": "1045846838839.7866option-0",
                    "rendered": "First Label",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": "1045846838839.7866option-1",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Second Label",
                      "className": "selected",
                      "onClick": [Function],
                    },
                    "ref": "1045846838839.7866option-1",
                    "rendered": "Second Label",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": "1045846838839.7866option-2",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Third Label",
                      "className": "",
                      "onClick": [Function],
                    },
                    "ref": "1045846838839.7866option-2",
                    "rendered": "Third Label",
                    "type": "li",
                  },
                ],
                "type": "ul",
              },
              "type": "div",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="collapsible-label no-wrap"
            onClick={[Function]}
            title={undefined}
          >
            <span
              className="dropdown-prepend"
            >
              <strong>
                Prepend text:
              </strong>
               
              Second Label
            </span>
          </div>,
          <input
            aria-label="Search"
            onChange={[Function]}
            onKeyDown={[Function]}
            style={
              Object {
                "height": 0,
                "margin": 0,
                "opacity": 0,
                "padding": 0,
                "pointerEvents": "none",
                "position": "absolute",
                "width": 0,
              }
            }
            type="text"
            value=""
          />,
          <div
            className="dropdown-icon"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
              }
            }
            onClick={[Function]}
          />,
          <div
            className="collapsible-content"
          >
            <UnmountClosed
              fixedHeight={104}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>
            </UnmountClosed>
          </div>,
        ],
        "className": "dnn-dropdown with-border small ",
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="dropdown-prepend"
            >
              <strong>
                Prepend text:
              </strong>
               
              Second Label
            </span>,
            "className": "collapsible-label no-wrap",
            "onClick": [Function],
            "title": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <strong>
                  Prepend text:
                </strong>,
                " ",
                "Second Label",
              ],
              "className": "dropdown-prepend",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Prepend text:",
                },
                "ref": null,
                "rendered": "Prepend text:",
                "type": "strong",
              },
              " ",
              "Second Label",
            ],
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "aria-label": "Search",
            "onChange": [Function],
            "onKeyDown": [Function],
            "style": Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            },
            "type": "text",
            "value": "",
          },
          "ref": "dropdownSearch",
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "dropdown-icon",
            "dangerouslySetInnerHTML": Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            },
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <UnmountClosed
              fixedHeight={104}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>
            </UnmountClosed>,
            "className": "collapsible-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>,
              "fixedHeight": 104,
              "isOpened": false,
              "keepCollapsedContent": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "autoHeight": false,
                "autoHeightMax": 200,
                "autoHeightMin": 0,
                "autoHide": false,
                "autoHideDuration": 200,
                "autoHideTimeout": 1000,
                "children": <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>,
                "hideTracksWhenNotNeeded": false,
                "onUpdate": undefined,
                "renderThumbHorizontal": [Function],
                "renderThumbVertical": [Function],
                "renderTrackHorizontal": [Function],
                "renderTrackVertical": [Function],
                "renderView": [Function],
                "style": undefined,
                "tagName": "div",
                "thumbMinSize": 30,
                "universal": false,
              },
              "ref": "dropdownScrollContainer",
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        First Label
                      </li>,
                      <li
                        className="selected"
                        onClick={[Function]}
                      >
                        Second Label
                      </li>,
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        Third Label
                      </li>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "1045846838839.7866option-0",
                      "nodeType": "host",
                      "props": Object {
                        "children": "First Label",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": "1045846838839.7866option-0",
                      "rendered": "First Label",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "1045846838839.7866option-1",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Second Label",
                        "className": "selected",
                        "onClick": [Function],
                      },
                      "ref": "1045846838839.7866option-1",
                      "rendered": "Second Label",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "1045846838839.7866option-2",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Third Label",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": "1045846838839.7866option-2",
                      "rendered": "Third Label",
                      "type": "li",
                    },
                  ],
                  "type": "ul",
                },
                "type": "div",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Dnn Dropdown component Displays a dropdown list onClick 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    autoHide={false}
    className=""
    closeOnClick={true}
    enabled={true}
    isDropDownOpen={false}
    label="My new label"
    onSelect={[Function]}
    options={
      Array [
        Object {
          "label": "First Label",
          "searchableValue": "first",
          "value": "first",
        },
        Object {
          "label": "Second Label",
          "searchableValue": "second",
          "value": "second",
        },
        Object {
          "label": "Third Label",
          "searchableValue": "third",
          "value": "third",
        },
      ]
    }
    prependWith="Prepend text:"
    size="small"
    value="second"
    withBorder={true}
    withIcon={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="collapsible-label no-wrap"
          onClick={[Function]}
          title={undefined}
        >
          <span
            className="dropdown-prepend"
          >
            <strong>
              Prepend text:
            </strong>
             
            Second Label
          </span>
        </div>,
        <input
          aria-label="Search"
          onChange={[Function]}
          onKeyDown={[Function]}
          style={
            Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            }
          }
          type="text"
          value=""
        />,
        <div
          className="dropdown-icon"
          dangerouslySetInnerHTML={
            Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            }
          }
          onClick={[Function]}
        />,
        <div
          className="collapsible-content open"
        >
          <UnmountClosed
            fixedHeight={104}
            isOpened={true}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>
          </UnmountClosed>
        </div>,
      ],
      "className": "dnn-dropdown with-border small  open",
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="dropdown-prepend"
          >
            <strong>
              Prepend text:
            </strong>
             
            Second Label
          </span>,
          "className": "collapsible-label no-wrap",
          "onClick": [Function],
          "title": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <strong>
                Prepend text:
              </strong>,
              " ",
              "Second Label",
            ],
            "className": "dropdown-prepend",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Prepend text:",
              },
              "ref": null,
              "rendered": "Prepend text:",
              "type": "strong",
            },
            " ",
            "Second Label",
          ],
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "aria-label": "Search",
          "onChange": [Function],
          "onKeyDown": [Function],
          "style": Object {
            "height": 0,
            "margin": 0,
            "opacity": 0,
            "padding": 0,
            "pointerEvents": "none",
            "position": "absolute",
            "width": 0,
          },
          "type": "text",
          "value": "",
        },
        "ref": "dropdownSearch",
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "className": "dropdown-icon",
          "dangerouslySetInnerHTML": Object {
            "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
          },
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <UnmountClosed
            fixedHeight={104}
            isOpened={true}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>
          </UnmountClosed>,
          "className": "collapsible-content open",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>,
            "fixedHeight": 104,
            "isOpened": true,
            "keepCollapsedContent": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "autoHeight": false,
              "autoHeightMax": 200,
              "autoHeightMin": 0,
              "autoHide": false,
              "autoHideDuration": 200,
              "autoHideTimeout": 1000,
              "children": <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>,
              "hideTracksWhenNotNeeded": false,
              "onUpdate": undefined,
              "renderThumbHorizontal": [Function],
              "renderThumbVertical": [Function],
              "renderTrackHorizontal": [Function],
              "renderTrackVertical": [Function],
              "renderView": [Function],
              "style": undefined,
              "tagName": "div",
              "thumbMinSize": 30,
              "universal": false,
            },
            "ref": "dropdownScrollContainer",
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>,
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>,
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "1045846838839.7866option-0",
                    "nodeType": "host",
                    "props": Object {
                      "children": "First Label",
                      "className": "",
                      "onClick": [Function],
                    },
                    "ref": "1045846838839.7866option-0",
                    "rendered": "First Label",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": "1045846838839.7866option-1",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Second Label",
                      "className": "selected",
                      "onClick": [Function],
                    },
                    "ref": "1045846838839.7866option-1",
                    "rendered": "Second Label",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": "1045846838839.7866option-2",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Third Label",
                      "className": "",
                      "onClick": [Function],
                    },
                    "ref": "1045846838839.7866option-2",
                    "rendered": "Third Label",
                    "type": "li",
                  },
                ],
                "type": "ul",
              },
              "type": "div",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="collapsible-label no-wrap"
            onClick={[Function]}
            title={undefined}
          >
            <span
              className="dropdown-prepend"
            >
              <strong>
                Prepend text:
              </strong>
               
              Second Label
            </span>
          </div>,
          <input
            aria-label="Search"
            onChange={[Function]}
            onKeyDown={[Function]}
            style={
              Object {
                "height": 0,
                "margin": 0,
                "opacity": 0,
                "padding": 0,
                "pointerEvents": "none",
                "position": "absolute",
                "width": 0,
              }
            }
            type="text"
            value=""
          />,
          <div
            className="dropdown-icon"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
              }
            }
            onClick={[Function]}
          />,
          <div
            className="collapsible-content open"
          >
            <UnmountClosed
              fixedHeight={104}
              isOpened={true}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>
            </UnmountClosed>
          </div>,
        ],
        "className": "dnn-dropdown with-border small  open",
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="dropdown-prepend"
            >
              <strong>
                Prepend text:
              </strong>
               
              Second Label
            </span>,
            "className": "collapsible-label no-wrap",
            "onClick": [Function],
            "title": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <strong>
                  Prepend text:
                </strong>,
                " ",
                "Second Label",
              ],
              "className": "dropdown-prepend",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Prepend text:",
                },
                "ref": null,
                "rendered": "Prepend text:",
                "type": "strong",
              },
              " ",
              "Second Label",
            ],
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "aria-label": "Search",
            "onChange": [Function],
            "onKeyDown": [Function],
            "style": Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            },
            "type": "text",
            "value": "",
          },
          "ref": "dropdownSearch",
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "dropdown-icon",
            "dangerouslySetInnerHTML": Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            },
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <UnmountClosed
              fixedHeight={104}
              isOpened={true}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>
            </UnmountClosed>,
            "className": "collapsible-content open",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>,
              "fixedHeight": 104,
              "isOpened": true,
              "keepCollapsedContent": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "autoHeight": false,
                "autoHeightMax": 200,
                "autoHeightMin": 0,
                "autoHide": false,
                "autoHideDuration": 200,
                "autoHideTimeout": 1000,
                "children": <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>,
                "hideTracksWhenNotNeeded": false,
                "onUpdate": undefined,
                "renderThumbHorizontal": [Function],
                "renderThumbVertical": [Function],
                "renderTrackHorizontal": [Function],
                "renderTrackVertical": [Function],
                "renderView": [Function],
                "style": undefined,
                "tagName": "div",
                "thumbMinSize": 30,
                "universal": false,
              },
              "ref": "dropdownScrollContainer",
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        First Label
                      </li>,
                      <li
                        className="selected"
                        onClick={[Function]}
                      >
                        Second Label
                      </li>,
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        Third Label
                      </li>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "1045846838839.7866option-0",
                      "nodeType": "host",
                      "props": Object {
                        "children": "First Label",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": "1045846838839.7866option-0",
                      "rendered": "First Label",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "1045846838839.7866option-1",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Second Label",
                        "className": "selected",
                        "onClick": [Function],
                      },
                      "ref": "1045846838839.7866option-1",
                      "rendered": "Second Label",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "1045846838839.7866option-2",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Third Label",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": "1045846838839.7866option-2",
                      "rendered": "Third Label",
                      "type": "li",
                    },
                  ],
                  "type": "ul",
                },
                "type": "div",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Dnn Dropdown component Displays/Hides icon when withIcon is true 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    autoHide={false}
    className=""
    closeOnClick={true}
    enabled={true}
    isDropDownOpen={false}
    label="My new label"
    onSelect={[Function]}
    options={
      Array [
        Object {
          "label": "First Label",
          "searchableValue": "first",
          "value": "first",
        },
        Object {
          "label": "Second Label",
          "searchableValue": "second",
          "value": "second",
        },
        Object {
          "label": "Third Label",
          "searchableValue": "third",
          "value": "third",
        },
      ]
    }
    prependWith="Prepend text:"
    size="small"
    value="second"
    withBorder={true}
    withIcon={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="collapsible-label no-wrap"
          onClick={[Function]}
          title={undefined}
        >
          <span
            className="dropdown-prepend"
          >
            <strong>
              Prepend text:
            </strong>
             
            Second Label
          </span>
        </div>,
        <input
          aria-label="Search"
          onChange={[Function]}
          onKeyDown={[Function]}
          style={
            Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            }
          }
          type="text"
          value=""
        />,
        false,
        <div
          className="collapsible-content"
        >
          <UnmountClosed
            fixedHeight={104}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>
          </UnmountClosed>
        </div>,
      ],
      "className": "dnn-dropdown with-border small ",
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="dropdown-prepend"
          >
            <strong>
              Prepend text:
            </strong>
             
            Second Label
          </span>,
          "className": "collapsible-label no-wrap",
          "onClick": [Function],
          "title": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <strong>
                Prepend text:
              </strong>,
              " ",
              "Second Label",
            ],
            "className": "dropdown-prepend",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Prepend text:",
              },
              "ref": null,
              "rendered": "Prepend text:",
              "type": "strong",
            },
            " ",
            "Second Label",
          ],
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "aria-label": "Search",
          "onChange": [Function],
          "onKeyDown": [Function],
          "style": Object {
            "height": 0,
            "margin": 0,
            "opacity": 0,
            "padding": 0,
            "pointerEvents": "none",
            "position": "absolute",
            "width": 0,
          },
          "type": "text",
          "value": "",
        },
        "ref": "dropdownSearch",
        "rendered": null,
        "type": "input",
      },
      false,
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <UnmountClosed
            fixedHeight={104}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>
          </UnmountClosed>,
          "className": "collapsible-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>,
            "fixedHeight": 104,
            "isOpened": false,
            "keepCollapsedContent": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "autoHeight": false,
              "autoHeightMax": 200,
              "autoHeightMin": 0,
              "autoHide": false,
              "autoHideDuration": 200,
              "autoHideTimeout": 1000,
              "children": <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>,
              "hideTracksWhenNotNeeded": false,
              "onUpdate": undefined,
              "renderThumbHorizontal": [Function],
              "renderThumbVertical": [Function],
              "renderTrackHorizontal": [Function],
              "renderTrackVertical": [Function],
              "renderView": [Function],
              "style": undefined,
              "tagName": "div",
              "thumbMinSize": 30,
              "universal": false,
            },
            "ref": "dropdownScrollContainer",
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>,
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>,
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "1000784308295.704option-0",
                    "nodeType": "host",
                    "props": Object {
                      "children": "First Label",
                      "className": "",
                      "onClick": [Function],
                    },
                    "ref": "1000784308295.704option-0",
                    "rendered": "First Label",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": "1000784308295.704option-1",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Second Label",
                      "className": "selected",
                      "onClick": [Function],
                    },
                    "ref": "1000784308295.704option-1",
                    "rendered": "Second Label",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": "1000784308295.704option-2",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Third Label",
                      "className": "",
                      "onClick": [Function],
                    },
                    "ref": "1000784308295.704option-2",
                    "rendered": "Third Label",
                    "type": "li",
                  },
                ],
                "type": "ul",
              },
              "type": "div",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="collapsible-label no-wrap"
            onClick={[Function]}
            title={undefined}
          >
            <span
              className="dropdown-prepend"
            >
              <strong>
                Prepend text:
              </strong>
               
              Second Label
            </span>
          </div>,
          <input
            aria-label="Search"
            onChange={[Function]}
            onKeyDown={[Function]}
            style={
              Object {
                "height": 0,
                "margin": 0,
                "opacity": 0,
                "padding": 0,
                "pointerEvents": "none",
                "position": "absolute",
                "width": 0,
              }
            }
            type="text"
            value=""
          />,
          false,
          <div
            className="collapsible-content"
          >
            <UnmountClosed
              fixedHeight={104}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>
            </UnmountClosed>
          </div>,
        ],
        "className": "dnn-dropdown with-border small ",
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="dropdown-prepend"
            >
              <strong>
                Prepend text:
              </strong>
               
              Second Label
            </span>,
            "className": "collapsible-label no-wrap",
            "onClick": [Function],
            "title": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <strong>
                  Prepend text:
                </strong>,
                " ",
                "Second Label",
              ],
              "className": "dropdown-prepend",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Prepend text:",
                },
                "ref": null,
                "rendered": "Prepend text:",
                "type": "strong",
              },
              " ",
              "Second Label",
            ],
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "aria-label": "Search",
            "onChange": [Function],
            "onKeyDown": [Function],
            "style": Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            },
            "type": "text",
            "value": "",
          },
          "ref": "dropdownSearch",
          "rendered": null,
          "type": "input",
        },
        false,
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <UnmountClosed
              fixedHeight={104}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>
            </UnmountClosed>,
            "className": "collapsible-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>,
              "fixedHeight": 104,
              "isOpened": false,
              "keepCollapsedContent": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "autoHeight": false,
                "autoHeightMax": 200,
                "autoHeightMin": 0,
                "autoHide": false,
                "autoHideDuration": 200,
                "autoHideTimeout": 1000,
                "children": <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>,
                "hideTracksWhenNotNeeded": false,
                "onUpdate": undefined,
                "renderThumbHorizontal": [Function],
                "renderThumbVertical": [Function],
                "renderTrackHorizontal": [Function],
                "renderTrackVertical": [Function],
                "renderView": [Function],
                "style": undefined,
                "tagName": "div",
                "thumbMinSize": 30,
                "universal": false,
              },
              "ref": "dropdownScrollContainer",
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        First Label
                      </li>,
                      <li
                        className="selected"
                        onClick={[Function]}
                      >
                        Second Label
                      </li>,
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        Third Label
                      </li>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "1000784308295.704option-0",
                      "nodeType": "host",
                      "props": Object {
                        "children": "First Label",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": "1000784308295.704option-0",
                      "rendered": "First Label",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "1000784308295.704option-1",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Second Label",
                        "className": "selected",
                        "onClick": [Function],
                      },
                      "ref": "1000784308295.704option-1",
                      "rendered": "Second Label",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "1000784308295.704option-2",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Third Label",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": "1000784308295.704option-2",
                      "rendered": "Third Label",
                      "type": "li",
                    },
                  ],
                  "type": "ul",
                },
                "type": "div",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Dnn Dropdown component Displays/Hides icon when withIcon is true 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    autoHide={false}
    className=""
    closeOnClick={true}
    enabled={true}
    isDropDownOpen={false}
    label="My new label"
    onSelect={[Function]}
    options={
      Array [
        Object {
          "label": "First Label",
          "searchableValue": "first",
          "value": "first",
        },
        Object {
          "label": "Second Label",
          "searchableValue": "second",
          "value": "second",
        },
        Object {
          "label": "Third Label",
          "searchableValue": "third",
          "value": "third",
        },
      ]
    }
    prependWith="Prepend text:"
    size="small"
    value="second"
    withBorder={true}
    withIcon={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="collapsible-label no-wrap"
          onClick={[Function]}
          title={undefined}
        >
          <span
            className="dropdown-prepend"
          >
            <strong>
              Prepend text:
            </strong>
             
            Second Label
          </span>
        </div>,
        <input
          aria-label="Search"
          onChange={[Function]}
          onKeyDown={[Function]}
          style={
            Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            }
          }
          type="text"
          value=""
        />,
        <div
          className="dropdown-icon"
          dangerouslySetInnerHTML={
            Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            }
          }
          onClick={[Function]}
        />,
        <div
          className="collapsible-content"
        >
          <UnmountClosed
            fixedHeight={104}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>
          </UnmountClosed>
        </div>,
      ],
      "className": "dnn-dropdown with-border small ",
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="dropdown-prepend"
          >
            <strong>
              Prepend text:
            </strong>
             
            Second Label
          </span>,
          "className": "collapsible-label no-wrap",
          "onClick": [Function],
          "title": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <strong>
                Prepend text:
              </strong>,
              " ",
              "Second Label",
            ],
            "className": "dropdown-prepend",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Prepend text:",
              },
              "ref": null,
              "rendered": "Prepend text:",
              "type": "strong",
            },
            " ",
            "Second Label",
          ],
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "aria-label": "Search",
          "onChange": [Function],
          "onKeyDown": [Function],
          "style": Object {
            "height": 0,
            "margin": 0,
            "opacity": 0,
            "padding": 0,
            "pointerEvents": "none",
            "position": "absolute",
            "width": 0,
          },
          "type": "text",
          "value": "",
        },
        "ref": "dropdownSearch",
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "className": "dropdown-icon",
          "dangerouslySetInnerHTML": Object {
            "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
          },
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <UnmountClosed
            fixedHeight={104}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>
          </UnmountClosed>,
          "className": "collapsible-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>,
            "fixedHeight": 104,
            "isOpened": false,
            "keepCollapsedContent": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "autoHeight": false,
              "autoHeightMax": 200,
              "autoHeightMin": 0,
              "autoHide": false,
              "autoHideDuration": 200,
              "autoHideTimeout": 1000,
              "children": <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>,
              "hideTracksWhenNotNeeded": false,
              "onUpdate": undefined,
              "renderThumbHorizontal": [Function],
              "renderThumbVertical": [Function],
              "renderTrackHorizontal": [Function],
              "renderTrackVertical": [Function],
              "renderView": [Function],
              "style": undefined,
              "tagName": "div",
              "thumbMinSize": 30,
              "universal": false,
            },
            "ref": "dropdownScrollContainer",
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>,
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>,
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "1000784308295.704option-0",
                    "nodeType": "host",
                    "props": Object {
                      "children": "First Label",
                      "className": "",
                      "onClick": [Function],
                    },
                    "ref": "1000784308295.704option-0",
                    "rendered": "First Label",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": "1000784308295.704option-1",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Second Label",
                      "className": "selected",
                      "onClick": [Function],
                    },
                    "ref": "1000784308295.704option-1",
                    "rendered": "Second Label",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": "1000784308295.704option-2",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Third Label",
                      "className": "",
                      "onClick": [Function],
                    },
                    "ref": "1000784308295.704option-2",
                    "rendered": "Third Label",
                    "type": "li",
                  },
                ],
                "type": "ul",
              },
              "type": "div",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="collapsible-label no-wrap"
            onClick={[Function]}
            title={undefined}
          >
            <span
              className="dropdown-prepend"
            >
              <strong>
                Prepend text:
              </strong>
               
              Second Label
            </span>
          </div>,
          <input
            aria-label="Search"
            onChange={[Function]}
            onKeyDown={[Function]}
            style={
              Object {
                "height": 0,
                "margin": 0,
                "opacity": 0,
                "padding": 0,
                "pointerEvents": "none",
                "position": "absolute",
                "width": 0,
              }
            }
            type="text"
            value=""
          />,
          <div
            className="dropdown-icon"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
              }
            }
            onClick={[Function]}
          />,
          <div
            className="collapsible-content"
          >
            <UnmountClosed
              fixedHeight={104}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>
            </UnmountClosed>
          </div>,
        ],
        "className": "dnn-dropdown with-border small ",
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="dropdown-prepend"
            >
              <strong>
                Prepend text:
              </strong>
               
              Second Label
            </span>,
            "className": "collapsible-label no-wrap",
            "onClick": [Function],
            "title": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <strong>
                  Prepend text:
                </strong>,
                " ",
                "Second Label",
              ],
              "className": "dropdown-prepend",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Prepend text:",
                },
                "ref": null,
                "rendered": "Prepend text:",
                "type": "strong",
              },
              " ",
              "Second Label",
            ],
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "aria-label": "Search",
            "onChange": [Function],
            "onKeyDown": [Function],
            "style": Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            },
            "type": "text",
            "value": "",
          },
          "ref": "dropdownSearch",
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "dropdown-icon",
            "dangerouslySetInnerHTML": Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            },
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <UnmountClosed
              fixedHeight={104}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>
            </UnmountClosed>,
            "className": "collapsible-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>,
              "fixedHeight": 104,
              "isOpened": false,
              "keepCollapsedContent": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "autoHeight": false,
                "autoHeightMax": 200,
                "autoHeightMin": 0,
                "autoHide": false,
                "autoHideDuration": 200,
                "autoHideTimeout": 1000,
                "children": <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>,
                "hideTracksWhenNotNeeded": false,
                "onUpdate": undefined,
                "renderThumbHorizontal": [Function],
                "renderThumbVertical": [Function],
                "renderTrackHorizontal": [Function],
                "renderTrackVertical": [Function],
                "renderView": [Function],
                "style": undefined,
                "tagName": "div",
                "thumbMinSize": 30,
                "universal": false,
              },
              "ref": "dropdownScrollContainer",
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        First Label
                      </li>,
                      <li
                        className="selected"
                        onClick={[Function]}
                      >
                        Second Label
                      </li>,
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        Third Label
                      </li>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "1000784308295.704option-0",
                      "nodeType": "host",
                      "props": Object {
                        "children": "First Label",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": "1000784308295.704option-0",
                      "rendered": "First Label",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "1000784308295.704option-1",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Second Label",
                        "className": "selected",
                        "onClick": [Function],
                      },
                      "ref": "1000784308295.704option-1",
                      "rendered": "Second Label",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "1000784308295.704option-2",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Third Label",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": "1000784308295.704option-2",
                      "rendered": "Third Label",
                      "type": "li",
                    },
                  ],
                  "type": "ul",
                },
                "type": "div",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Dnn Dropdown component Renders <Collapse /> 1`] = `
<Dropdown
  autoHide={false}
  className=""
  closeOnClick={true}
  enabled={true}
  isDropDownOpen={true}
  label="My new label"
  onSelect={[Function]}
  options={
    Array [
      Object {
        "label": "First Label",
        "searchableValue": "first",
        "value": "first",
      },
      Object {
        "label": "Second Label",
        "searchableValue": "second",
        "value": "second",
      },
      Object {
        "label": "Third Label",
        "searchableValue": "third",
        "value": "third",
      },
    ]
  }
  prependWith="Prepend text:"
  size="small"
  value="second"
  withBorder={true}
  withIcon={false}
>
  <div
    className="dnn-dropdown with-border small  open"
    style={undefined}
  >
    <div
      className="collapsible-label no-wrap"
      onClick={[Function]}
      title={undefined}
    >
      <span
        className="dropdown-prepend"
      >
        <strong>
          Prepend text:
        </strong>
         
        Second Label
      </span>
    </div>
    <input
      aria-label="Search"
      onChange={[Function]}
      onKeyDown={[Function]}
      style={
        Object {
          "height": 0,
          "margin": 0,
          "opacity": 0,
          "padding": 0,
          "pointerEvents": "none",
          "position": "absolute",
          "width": 0,
        }
      }
      type="text"
      value=""
    />
    <div
      className="collapsible-content open"
    >
      <UnmountClosed
        fixedHeight={104}
        isOpened={true}
        keepCollapsedContent={true}
      >
        <Collapse
          fixedHeight={104}
          forceInitialAnimation={true}
          hasNestedCollapse={false}
          isOpened={true}
          keepCollapsedContent={true}
          onMeasure={[Function]}
          onRender={[Function]}
          onRest={[Function]}
          style={Object {}}
          theme={
            Object {
              "collapse": "ReactCollapse--collapse",
              "content": "ReactCollapse--content",
            }
          }
        >
          <Motion
            defaultStyle={
              Object {
                "height": 0,
              }
            }
            onRest={[Function]}
            style={
              Object {
                "height": Object {
                  "damping": 26,
                  "precision": 1,
                  "stiffness": 170,
                  "val": 104,
                },
              }
            }
          >
            <div
              className="ReactCollapse--collapse"
              keepCollapsedContent={true}
              style={
                Object {
                  "height": 0,
                  "overflow": "hidden",
                }
              }
            >
              <div
                className="ReactCollapse--content"
              >
                <Scrollbars
                  autoHeight={false}
                  autoHeightMax={200}
                  autoHeightMin={0}
                  autoHide={false}
                  autoHideDuration={200}
                  autoHideTimeout={1000}
                  hideTracksWhenNotNeeded={false}
                  onUpdate={undefined}
                  renderThumbHorizontal={[Function]}
                  renderThumbVertical={[Function]}
                  renderTrackHorizontal={[Function]}
                  renderTrackVertical={[Function]}
                  renderView={[Function]}
                  style={undefined}
                  tagName="div"
                  thumbMinSize={30}
                  universal={false}
                >
                  <div
                    style={
                      Object {
                        "height": "100%",
                        "overflow": "hidden",
                        "position": "relative",
                        "width": "100%",
                      }
                    }
                  >
                    <div
                      key="view"
                      style={
                        Object {
                          "WebkitOverflowScrolling": "touch",
                          "bottom": 0,
                          "left": 0,
                          "marginBottom": 0,
                          "marginRight": 0,
                          "overflow": "scroll",
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <div>
                        <ul>
                          <li
                            className=""
                            key="1431491875437.0828option-0"
                            onClick={[Function]}
                          >
                            First Label
                          </li>
                          <li
                            className="selected"
                            key="1431491875437.0828option-1"
                            onClick={[Function]}
                          >
                            Second Label
                          </li>
                          <li
                            className=""
                            key="1431491875437.0828option-2"
                            onClick={[Function]}
                          >
                            Third Label
                          </li>
                        </ul>
                      </div>
                    </div>
                    <div
                      key="trackHorizontal"
                      style={
                        Object {
                          "borderRadius": 3,
                          "bottom": 2,
                          "display": "none",
                          "height": 6,
                          "left": 2,
                          "position": "absolute",
                          "right": 2,
                        }
                      }
                    >
                      <div
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,.2)",
                            "borderRadius": "inherit",
                            "cursor": "pointer",
                            "display": "block",
                            "height": "100%",
                            "position": "relative",
                          }
                        }
                      />
                    </div>
                    <div
                      key="trackVertical"
                      style={
                        Object {
                          "borderRadius": 3,
                          "bottom": 2,
                          "display": "none",
                          "position": "absolute",
                          "right": 2,
                          "top": 2,
                          "width": 6,
                        }
                      }
                    >
                      <div
                        style={
                          Object {
                            "backgroundColor": "rgba(0,0,0,.2)",
                            "borderRadius": "inherit",
                            "cursor": "pointer",
                            "display": "block",
                            "position": "relative",
                            "width": "100%",
                          }
                        }
                      />
                    </div>
                  </div>
                </Scrollbars>
              </div>
            </div>
          </Motion>
        </Collapse>
      </UnmountClosed>
    </div>
  </div>
</Dropdown>
`;

exports[`Dnn Dropdown component Renders labels properly according to props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    autoHide={false}
    className=""
    closeOnClick={true}
    enabled={true}
    isDropDownOpen={false}
    label="-- Select --"
    onSelect={[Function]}
    options={Array []}
    size="small"
    value={null}
    withBorder={true}
    withIcon={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="collapsible-label no-wrap"
          onClick={[Function]}
          title={undefined}
        >
          -- Select --
        </div>,
        <input
          aria-label="Search"
          onChange={[Function]}
          onKeyDown={[Function]}
          style={
            Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            }
          }
          type="text"
          value=""
        />,
        <div
          className="dropdown-icon"
          dangerouslySetInnerHTML={
            Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            }
          }
          onClick={[Function]}
        />,
        <div
          className="collapsible-content"
        >
          <UnmountClosed
            fixedHeight={0}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul />
              </div>
            </Scrollbars>
          </UnmountClosed>
        </div>,
      ],
      "className": "dnn-dropdown with-border small ",
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "-- Select --",
          "className": "collapsible-label no-wrap",
          "onClick": [Function],
          "title": undefined,
        },
        "ref": null,
        "rendered": "-- Select --",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "aria-label": "Search",
          "onChange": [Function],
          "onKeyDown": [Function],
          "style": Object {
            "height": 0,
            "margin": 0,
            "opacity": 0,
            "padding": 0,
            "pointerEvents": "none",
            "position": "absolute",
            "width": 0,
          },
          "type": "text",
          "value": "",
        },
        "ref": "dropdownSearch",
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "className": "dropdown-icon",
          "dangerouslySetInnerHTML": Object {
            "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
          },
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <UnmountClosed
            fixedHeight={0}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul />
              </div>
            </Scrollbars>
          </UnmountClosed>,
          "className": "collapsible-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul />
              </div>
            </Scrollbars>,
            "fixedHeight": 0,
            "isOpened": false,
            "keepCollapsedContent": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "autoHeight": false,
              "autoHeightMax": 200,
              "autoHeightMin": 0,
              "autoHide": false,
              "autoHideDuration": 200,
              "autoHideTimeout": 1000,
              "children": <div>
                <ul />
              </div>,
              "hideTracksWhenNotNeeded": false,
              "onUpdate": undefined,
              "renderThumbHorizontal": [Function],
              "renderThumbVertical": [Function],
              "renderTrackHorizontal": [Function],
              "renderTrackVertical": [Function],
              "renderView": [Function],
              "style": undefined,
              "tagName": "div",
              "thumbMinSize": 30,
              "universal": false,
            },
            "ref": "dropdownScrollContainer",
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <ul />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                },
                "ref": null,
                "rendered": Array [],
                "type": "ul",
              },
              "type": "div",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="collapsible-label no-wrap"
            onClick={[Function]}
            title={undefined}
          >
            -- Select --
          </div>,
          <input
            aria-label="Search"
            onChange={[Function]}
            onKeyDown={[Function]}
            style={
              Object {
                "height": 0,
                "margin": 0,
                "opacity": 0,
                "padding": 0,
                "pointerEvents": "none",
                "position": "absolute",
                "width": 0,
              }
            }
            type="text"
            value=""
          />,
          <div
            className="dropdown-icon"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
              }
            }
            onClick={[Function]}
          />,
          <div
            className="collapsible-content"
          >
            <UnmountClosed
              fixedHeight={0}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul />
                </div>
              </Scrollbars>
            </UnmountClosed>
          </div>,
        ],
        "className": "dnn-dropdown with-border small ",
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "-- Select --",
            "className": "collapsible-label no-wrap",
            "onClick": [Function],
            "title": undefined,
          },
          "ref": null,
          "rendered": "-- Select --",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "aria-label": "Search",
            "onChange": [Function],
            "onKeyDown": [Function],
            "style": Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            },
            "type": "text",
            "value": "",
          },
          "ref": "dropdownSearch",
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "dropdown-icon",
            "dangerouslySetInnerHTML": Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            },
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <UnmountClosed
              fixedHeight={0}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul />
                </div>
              </Scrollbars>
            </UnmountClosed>,
            "className": "collapsible-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul />
                </div>
              </Scrollbars>,
              "fixedHeight": 0,
              "isOpened": false,
              "keepCollapsedContent": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "autoHeight": false,
                "autoHeightMax": 200,
                "autoHeightMin": 0,
                "autoHide": false,
                "autoHideDuration": 200,
                "autoHideTimeout": 1000,
                "children": <div>
                  <ul />
                </div>,
                "hideTracksWhenNotNeeded": false,
                "onUpdate": undefined,
                "renderThumbHorizontal": [Function],
                "renderThumbVertical": [Function],
                "renderTrackHorizontal": [Function],
                "renderTrackVertical": [Function],
                "renderView": [Function],
                "style": undefined,
                "tagName": "div",
                "thumbMinSize": 30,
                "universal": false,
              },
              "ref": "dropdownScrollContainer",
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <ul />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [],
                  },
                  "ref": null,
                  "rendered": Array [],
                  "type": "ul",
                },
                "type": "div",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Dnn Dropdown component Renders labels properly according to props 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    autoHide={false}
    className=""
    closeOnClick={true}
    enabled={true}
    isDropDownOpen={false}
    label="My new label"
    onSelect={[Function]}
    options={Array []}
    size="small"
    value={null}
    withBorder={true}
    withIcon={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="collapsible-label no-wrap"
          onClick={[Function]}
          title={undefined}
        >
          My new label
        </div>,
        <input
          aria-label="Search"
          onChange={[Function]}
          onKeyDown={[Function]}
          style={
            Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            }
          }
          type="text"
          value=""
        />,
        <div
          className="dropdown-icon"
          dangerouslySetInnerHTML={
            Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            }
          }
          onClick={[Function]}
        />,
        <div
          className="collapsible-content"
        >
          <UnmountClosed
            fixedHeight={0}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul />
              </div>
            </Scrollbars>
          </UnmountClosed>
        </div>,
      ],
      "className": "dnn-dropdown with-border small ",
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "My new label",
          "className": "collapsible-label no-wrap",
          "onClick": [Function],
          "title": undefined,
        },
        "ref": null,
        "rendered": "My new label",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "aria-label": "Search",
          "onChange": [Function],
          "onKeyDown": [Function],
          "style": Object {
            "height": 0,
            "margin": 0,
            "opacity": 0,
            "padding": 0,
            "pointerEvents": "none",
            "position": "absolute",
            "width": 0,
          },
          "type": "text",
          "value": "",
        },
        "ref": "dropdownSearch",
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "className": "dropdown-icon",
          "dangerouslySetInnerHTML": Object {
            "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
          },
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <UnmountClosed
            fixedHeight={0}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul />
              </div>
            </Scrollbars>
          </UnmountClosed>,
          "className": "collapsible-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul />
              </div>
            </Scrollbars>,
            "fixedHeight": 0,
            "isOpened": false,
            "keepCollapsedContent": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "autoHeight": false,
              "autoHeightMax": 200,
              "autoHeightMin": 0,
              "autoHide": false,
              "autoHideDuration": 200,
              "autoHideTimeout": 1000,
              "children": <div>
                <ul />
              </div>,
              "hideTracksWhenNotNeeded": false,
              "onUpdate": undefined,
              "renderThumbHorizontal": [Function],
              "renderThumbVertical": [Function],
              "renderTrackHorizontal": [Function],
              "renderTrackVertical": [Function],
              "renderView": [Function],
              "style": undefined,
              "tagName": "div",
              "thumbMinSize": 30,
              "universal": false,
            },
            "ref": "dropdownScrollContainer",
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <ul />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                },
                "ref": null,
                "rendered": Array [],
                "type": "ul",
              },
              "type": "div",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="collapsible-label no-wrap"
            onClick={[Function]}
            title={undefined}
          >
            My new label
          </div>,
          <input
            aria-label="Search"
            onChange={[Function]}
            onKeyDown={[Function]}
            style={
              Object {
                "height": 0,
                "margin": 0,
                "opacity": 0,
                "padding": 0,
                "pointerEvents": "none",
                "position": "absolute",
                "width": 0,
              }
            }
            type="text"
            value=""
          />,
          <div
            className="dropdown-icon"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
              }
            }
            onClick={[Function]}
          />,
          <div
            className="collapsible-content"
          >
            <UnmountClosed
              fixedHeight={0}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul />
                </div>
              </Scrollbars>
            </UnmountClosed>
          </div>,
        ],
        "className": "dnn-dropdown with-border small ",
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "My new label",
            "className": "collapsible-label no-wrap",
            "onClick": [Function],
            "title": undefined,
          },
          "ref": null,
          "rendered": "My new label",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "aria-label": "Search",
            "onChange": [Function],
            "onKeyDown": [Function],
            "style": Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            },
            "type": "text",
            "value": "",
          },
          "ref": "dropdownSearch",
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "dropdown-icon",
            "dangerouslySetInnerHTML": Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            },
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <UnmountClosed
              fixedHeight={0}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul />
                </div>
              </Scrollbars>
            </UnmountClosed>,
            "className": "collapsible-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul />
                </div>
              </Scrollbars>,
              "fixedHeight": 0,
              "isOpened": false,
              "keepCollapsedContent": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "autoHeight": false,
                "autoHeightMax": 200,
                "autoHeightMin": 0,
                "autoHide": false,
                "autoHideDuration": 200,
                "autoHideTimeout": 1000,
                "children": <div>
                  <ul />
                </div>,
                "hideTracksWhenNotNeeded": false,
                "onUpdate": undefined,
                "renderThumbHorizontal": [Function],
                "renderThumbVertical": [Function],
                "renderTrackHorizontal": [Function],
                "renderTrackVertical": [Function],
                "renderView": [Function],
                "style": undefined,
                "tagName": "div",
                "thumbMinSize": 30,
                "universal": false,
              },
              "ref": "dropdownScrollContainer",
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <ul />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [],
                  },
                  "ref": null,
                  "rendered": Array [],
                  "type": "ul",
                },
                "type": "div",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Dnn Dropdown component Renders labels properly according to props 3`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    autoHide={false}
    className=""
    closeOnClick={true}
    enabled={true}
    isDropDownOpen={false}
    label="My new label"
    onSelect={[Function]}
    options={
      Array [
        Object {
          "label": "First Label",
          "searchableValue": "first",
          "value": "first",
        },
        Object {
          "label": "Second Label",
          "searchableValue": "second",
          "value": "second",
        },
        Object {
          "label": "Third Label",
          "searchableValue": "third",
          "value": "third",
        },
      ]
    }
    prependWith="Prepend text:"
    size="small"
    value="second"
    withBorder={true}
    withIcon={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="collapsible-label no-wrap"
          onClick={[Function]}
          title={undefined}
        >
          <span
            className="dropdown-prepend"
          >
            <strong>
              Prepend text:
            </strong>
             
            Second Label
          </span>
        </div>,
        <input
          aria-label="Search"
          onChange={[Function]}
          onKeyDown={[Function]}
          style={
            Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            }
          }
          type="text"
          value=""
        />,
        <div
          className="dropdown-icon"
          dangerouslySetInnerHTML={
            Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            }
          }
          onClick={[Function]}
        />,
        <div
          className="collapsible-content"
        >
          <UnmountClosed
            fixedHeight={104}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>
          </UnmountClosed>
        </div>,
      ],
      "className": "dnn-dropdown with-border small ",
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="dropdown-prepend"
          >
            <strong>
              Prepend text:
            </strong>
             
            Second Label
          </span>,
          "className": "collapsible-label no-wrap",
          "onClick": [Function],
          "title": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <strong>
                Prepend text:
              </strong>,
              " ",
              "Second Label",
            ],
            "className": "dropdown-prepend",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Prepend text:",
              },
              "ref": null,
              "rendered": "Prepend text:",
              "type": "strong",
            },
            " ",
            "Second Label",
          ],
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "aria-label": "Search",
          "onChange": [Function],
          "onKeyDown": [Function],
          "style": Object {
            "height": 0,
            "margin": 0,
            "opacity": 0,
            "padding": 0,
            "pointerEvents": "none",
            "position": "absolute",
            "width": 0,
          },
          "type": "text",
          "value": "",
        },
        "ref": "dropdownSearch",
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "className": "dropdown-icon",
          "dangerouslySetInnerHTML": Object {
            "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
          },
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <UnmountClosed
            fixedHeight={104}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>
          </UnmountClosed>,
          "className": "collapsible-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>
            </Scrollbars>,
            "fixedHeight": 104,
            "isOpened": false,
            "keepCollapsedContent": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "autoHeight": false,
              "autoHeightMax": 200,
              "autoHeightMin": 0,
              "autoHide": false,
              "autoHideDuration": 200,
              "autoHideTimeout": 1000,
              "children": <div>
                <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>
              </div>,
              "hideTracksWhenNotNeeded": false,
              "onUpdate": undefined,
              "renderThumbHorizontal": [Function],
              "renderThumbVertical": [Function],
              "renderTrackHorizontal": [Function],
              "renderTrackVertical": [Function],
              "renderView": [Function],
              "style": undefined,
              "tagName": "div",
              "thumbMinSize": 30,
              "universal": false,
            },
            "ref": "dropdownScrollContainer",
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <ul>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    First Label
                  </li>
                  <li
                    className="selected"
                    onClick={[Function]}
                  >
                    Second Label
                  </li>
                  <li
                    className=""
                    onClick={[Function]}
                  >
                    Third Label
                  </li>
                </ul>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>,
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>,
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "1150705326404.178option-0",
                    "nodeType": "host",
                    "props": Object {
                      "children": "First Label",
                      "className": "",
                      "onClick": [Function],
                    },
                    "ref": "1150705326404.178option-0",
                    "rendered": "First Label",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": "1150705326404.178option-1",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Second Label",
                      "className": "selected",
                      "onClick": [Function],
                    },
                    "ref": "1150705326404.178option-1",
                    "rendered": "Second Label",
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": "1150705326404.178option-2",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Third Label",
                      "className": "",
                      "onClick": [Function],
                    },
                    "ref": "1150705326404.178option-2",
                    "rendered": "Third Label",
                    "type": "li",
                  },
                ],
                "type": "ul",
              },
              "type": "div",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="collapsible-label no-wrap"
            onClick={[Function]}
            title={undefined}
          >
            <span
              className="dropdown-prepend"
            >
              <strong>
                Prepend text:
              </strong>
               
              Second Label
            </span>
          </div>,
          <input
            aria-label="Search"
            onChange={[Function]}
            onKeyDown={[Function]}
            style={
              Object {
                "height": 0,
                "margin": 0,
                "opacity": 0,
                "padding": 0,
                "pointerEvents": "none",
                "position": "absolute",
                "width": 0,
              }
            }
            type="text"
            value=""
          />,
          <div
            className="dropdown-icon"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
              }
            }
            onClick={[Function]}
          />,
          <div
            className="collapsible-content"
          >
            <UnmountClosed
              fixedHeight={104}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>
            </UnmountClosed>
          </div>,
        ],
        "className": "dnn-dropdown with-border small ",
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="dropdown-prepend"
            >
              <strong>
                Prepend text:
              </strong>
               
              Second Label
            </span>,
            "className": "collapsible-label no-wrap",
            "onClick": [Function],
            "title": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <strong>
                  Prepend text:
                </strong>,
                " ",
                "Second Label",
              ],
              "className": "dropdown-prepend",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Prepend text:",
                },
                "ref": null,
                "rendered": "Prepend text:",
                "type": "strong",
              },
              " ",
              "Second Label",
            ],
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "aria-label": "Search",
            "onChange": [Function],
            "onKeyDown": [Function],
            "style": Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            },
            "type": "text",
            "value": "",
          },
          "ref": "dropdownSearch",
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "dropdown-icon",
            "dangerouslySetInnerHTML": Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            },
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <UnmountClosed
              fixedHeight={104}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>
            </UnmountClosed>,
            "className": "collapsible-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>
              </Scrollbars>,
              "fixedHeight": 104,
              "isOpened": false,
              "keepCollapsedContent": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "autoHeight": false,
                "autoHeightMax": 200,
                "autoHeightMin": 0,
                "autoHide": false,
                "autoHideDuration": 200,
                "autoHideTimeout": 1000,
                "children": <div>
                  <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>
                </div>,
                "hideTracksWhenNotNeeded": false,
                "onUpdate": undefined,
                "renderThumbHorizontal": [Function],
                "renderThumbVertical": [Function],
                "renderTrackHorizontal": [Function],
                "renderTrackVertical": [Function],
                "renderView": [Function],
                "style": undefined,
                "tagName": "div",
                "thumbMinSize": 30,
                "universal": false,
              },
              "ref": "dropdownScrollContainer",
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <ul>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      First Label
                    </li>
                    <li
                      className="selected"
                      onClick={[Function]}
                    >
                      Second Label
                    </li>
                    <li
                      className=""
                      onClick={[Function]}
                    >
                      Third Label
                    </li>
                  </ul>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        First Label
                      </li>,
                      <li
                        className="selected"
                        onClick={[Function]}
                      >
                        Second Label
                      </li>,
                      <li
                        className=""
                        onClick={[Function]}
                      >
                        Third Label
                      </li>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "1150705326404.178option-0",
                      "nodeType": "host",
                      "props": Object {
                        "children": "First Label",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": "1150705326404.178option-0",
                      "rendered": "First Label",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "1150705326404.178option-1",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Second Label",
                        "className": "selected",
                        "onClick": [Function],
                      },
                      "ref": "1150705326404.178option-1",
                      "rendered": "Second Label",
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": "1150705326404.178option-2",
                      "nodeType": "host",
                      "props": Object {
                        "children": "Third Label",
                        "className": "",
                        "onClick": [Function],
                      },
                      "ref": "1150705326404.178option-2",
                      "rendered": "Third Label",
                      "type": "li",
                    },
                  ],
                  "type": "ul",
                },
                "type": "div",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;

exports[`Dnn Dropdown component Renders with minimal setup 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    autoHide={false}
    className=""
    closeOnClick={true}
    enabled={true}
    isDropDownOpen={false}
    label="-- Select --"
    onSelect={[Function]}
    options={Array []}
    size="small"
    value={null}
    withBorder={true}
    withIcon={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="collapsible-label no-wrap"
          onClick={[Function]}
          title={undefined}
        >
          -- Select --
        </div>,
        <input
          aria-label="Search"
          onChange={[Function]}
          onKeyDown={[Function]}
          style={
            Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            }
          }
          type="text"
          value=""
        />,
        <div
          className="dropdown-icon"
          dangerouslySetInnerHTML={
            Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            }
          }
          onClick={[Function]}
        />,
        <div
          className="collapsible-content"
        >
          <UnmountClosed
            fixedHeight={0}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul />
              </div>
            </Scrollbars>
          </UnmountClosed>
        </div>,
      ],
      "className": "dnn-dropdown with-border small ",
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": "-- Select --",
          "className": "collapsible-label no-wrap",
          "onClick": [Function],
          "title": undefined,
        },
        "ref": null,
        "rendered": "-- Select --",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "aria-label": "Search",
          "onChange": [Function],
          "onKeyDown": [Function],
          "style": Object {
            "height": 0,
            "margin": 0,
            "opacity": 0,
            "padding": 0,
            "pointerEvents": "none",
            "position": "absolute",
            "width": 0,
          },
          "type": "text",
          "value": "",
        },
        "ref": "dropdownSearch",
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "className": "dropdown-icon",
          "dangerouslySetInnerHTML": Object {
            "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
          },
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <UnmountClosed
            fixedHeight={0}
            isOpened={false}
            keepCollapsedContent={true}
          >
            <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul />
              </div>
            </Scrollbars>
          </UnmountClosed>,
          "className": "collapsible-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Scrollbars
              autoHeight={false}
              autoHeightMax={200}
              autoHeightMin={0}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              onUpdate={undefined}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              style={undefined}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div>
                <ul />
              </div>
            </Scrollbars>,
            "fixedHeight": 0,
            "isOpened": false,
            "keepCollapsedContent": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "autoHeight": false,
              "autoHeightMax": 200,
              "autoHeightMin": 0,
              "autoHide": false,
              "autoHideDuration": 200,
              "autoHideTimeout": 1000,
              "children": <div>
                <ul />
              </div>,
              "hideTracksWhenNotNeeded": false,
              "onUpdate": undefined,
              "renderThumbHorizontal": [Function],
              "renderThumbVertical": [Function],
              "renderTrackHorizontal": [Function],
              "renderTrackVertical": [Function],
              "renderView": [Function],
              "style": undefined,
              "tagName": "div",
              "thumbMinSize": 30,
              "universal": false,
            },
            "ref": "dropdownScrollContainer",
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <ul />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": Array [],
                },
                "ref": null,
                "rendered": Array [],
                "type": "ul",
              },
              "type": "div",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="collapsible-label no-wrap"
            onClick={[Function]}
            title={undefined}
          >
            -- Select --
          </div>,
          <input
            aria-label="Search"
            onChange={[Function]}
            onKeyDown={[Function]}
            style={
              Object {
                "height": 0,
                "margin": 0,
                "opacity": 0,
                "padding": 0,
                "pointerEvents": "none",
                "position": "absolute",
                "width": 0,
              }
            }
            type="text"
            value=""
          />,
          <div
            className="dropdown-icon"
            dangerouslySetInnerHTML={
              Object {
                "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
              }
            }
            onClick={[Function]}
          />,
          <div
            className="collapsible-content"
          >
            <UnmountClosed
              fixedHeight={0}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul />
                </div>
              </Scrollbars>
            </UnmountClosed>
          </div>,
        ],
        "className": "dnn-dropdown with-border small ",
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "-- Select --",
            "className": "collapsible-label no-wrap",
            "onClick": [Function],
            "title": undefined,
          },
          "ref": null,
          "rendered": "-- Select --",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "aria-label": "Search",
            "onChange": [Function],
            "onKeyDown": [Function],
            "style": Object {
              "height": 0,
              "margin": 0,
              "opacity": 0,
              "padding": 0,
              "pointerEvents": "none",
              "position": "absolute",
              "width": 0,
            },
            "type": "text",
            "value": "",
          },
          "ref": "dropdownSearch",
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "className": "dropdown-icon",
            "dangerouslySetInnerHTML": Object {
              "__html": "<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<!-- Generator: Adobe Illustrator 20.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version=\\"1.1\\" id=\\"Layer_1\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\" x=\\"0px\\" y=\\"0px\\"
	 viewBox=\\"0 0 2048 2048\\" style=\\"enable-background:new 0 0 2048 2048;\\" xml:space=\\"preserve\\">
<path d=\\"M1028.6,1367L259.3,683.5h1538L1028.6,1367z\\"/>
</svg>
",
            },
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <UnmountClosed
              fixedHeight={0}
              isOpened={false}
              keepCollapsedContent={true}
            >
              <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul />
                </div>
              </Scrollbars>
            </UnmountClosed>,
            "className": "collapsible-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Scrollbars
                autoHeight={false}
                autoHeightMax={200}
                autoHeightMin={0}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                onUpdate={undefined}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                style={undefined}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div>
                  <ul />
                </div>
              </Scrollbars>,
              "fixedHeight": 0,
              "isOpened": false,
              "keepCollapsedContent": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "autoHeight": false,
                "autoHeightMax": 200,
                "autoHeightMin": 0,
                "autoHide": false,
                "autoHideDuration": 200,
                "autoHideTimeout": 1000,
                "children": <div>
                  <ul />
                </div>,
                "hideTracksWhenNotNeeded": false,
                "onUpdate": undefined,
                "renderThumbHorizontal": [Function],
                "renderThumbVertical": [Function],
                "renderTrackHorizontal": [Function],
                "renderTrackVertical": [Function],
                "renderView": [Function],
                "style": undefined,
                "tagName": "div",
                "thumbMinSize": 30,
                "universal": false,
              },
              "ref": "dropdownScrollContainer",
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <ul />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [],
                  },
                  "ref": null,
                  "rendered": Array [],
                  "type": "ul",
                },
                "type": "div",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
